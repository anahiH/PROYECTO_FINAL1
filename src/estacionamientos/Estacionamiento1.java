/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package estacionamientos;

import carro.Carro;
import frames.inicio;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 *
 * @author robertoespino
 */
//ESTA FRAME ES PARA ESCOJER LA EMPRESA, PARA HACERLA, LA CLASE SE EXTIENDE A UN PANEL E IMPLEMENTA UN ACTIONLISTENER, PARA QUE PUEDA MOVER EL CARRITO
public class Estacionamiento1 extends java.awt.Panel implements ActionListener {
//AQUÍ EXISTE DOS VARIABLES, EL CARRITO QUE APARACERÁ AL ESCOGER UN LUGAR, Y UN TIMER, QUE PERMITE QUE SE REPINTE PERIÓDICAMENTE EL PANEL PARA QUE HAYA UN ALUSIÓN AL MOVIMIENTO DEL CARRO
    Carro carro;
    Timer timer = new Timer(5, this);

    /**
     * Creates new form Estacionamiento1
     */
    public Estacionamiento1() {
        initComponents();
        setFocusable(true);
        //ESTE ARREGLO DE PANELES ES UN ARREGLO DE LOS DIFERENTES ESPACIOS PARA ESTACIONARSE, LOS CUALES SON 16.
        JPanel[] arregloPanel = new JPanel[16];
        arregloPanel[0] = pnlCajon1;
        arregloPanel[1] = pnlCajon2;
        arregloPanel[2] = pnlCajon3;
        arregloPanel[3] = pnlCajon4;
        arregloPanel[4] = pnlCajon5;
        arregloPanel[5] = pnlCajon6;
        arregloPanel[6] = pnlCajon7;
        arregloPanel[7] = pnlCajon8;
        arregloPanel[8] = pnlCajon9;
        arregloPanel[9] = pnlCajon10;
        arregloPanel[10] = pnlCajon11;
        arregloPanel[11] = pnlCajon12;
        arregloPanel[12] = pnlCajon13;
        arregloPanel[13] = pnlCajon14;
        arregloPanel[14] = pnlCajon15;
        arregloPanel[15] = pnlCajon16;
        //AQUÍ SE HIZO UN ARREGLO DE COLORES PARA LUEGO LLENAR LOS ESPACIOS, AL INICIAR LA SIMULACIÓN, DE LOS COLORES ROJO O VERDE ALEATORIAMENTE
        Color[] arregloColores = new Color[2];
        arregloColores[0] = Color.GREEN;
        arregloColores[1] = Color.RED;
        for (int i = 0; i < arregloPanel.length; i++) {
            int ival = (int) Math.floor(Math.random() * (1 - 0 + 1) + 0);
            arregloPanel[i].setBackground(arregloColores[ival]);
        }
        //this.timer = new Timer(5, this);
        //ESTE KEY LISTENER, COMO SE PUEDE OBSERVAR, SE INICIALIZA PARA QUE HAGA CASO AL TECLADO, ADEMÁS, SE INICIA EL TIMER
        addKeyListener(new Teclado());
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCajon1 = new javax.swing.JPanel();
        pnlCajon2 = new javax.swing.JPanel();
        pnlCajon3 = new javax.swing.JPanel();
        pnlCajon4 = new javax.swing.JPanel();
        pnlCajon5 = new javax.swing.JPanel();
        pnlCajon6 = new javax.swing.JPanel();
        pnlCajon7 = new javax.swing.JPanel();
        pnlCajon8 = new javax.swing.JPanel();
        pnlCajon9 = new javax.swing.JPanel();
        pnlCajon10 = new javax.swing.JPanel();
        pnlCajon11 = new javax.swing.JPanel();
        pnlCajon12 = new javax.swing.JPanel();
        pnlCajon13 = new javax.swing.JPanel();
        pnlCajon14 = new javax.swing.JPanel();
        pnlCajon15 = new javax.swing.JPanel();
        pnlCajon16 = new javax.swing.JPanel();
        btnLlenar = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1040, 700));

        pnlCajon1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon1Layout = new javax.swing.GroupLayout(pnlCajon1);
        pnlCajon1.setLayout(pnlCajon1Layout);
        pnlCajon1Layout.setHorizontalGroup(
            pnlCajon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon1Layout.setVerticalGroup(
            pnlCajon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        pnlCajon2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon2Layout = new javax.swing.GroupLayout(pnlCajon2);
        pnlCajon2.setLayout(pnlCajon2Layout);
        pnlCajon2Layout.setHorizontalGroup(
            pnlCajon2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon2Layout.setVerticalGroup(
            pnlCajon2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        pnlCajon3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon3Layout = new javax.swing.GroupLayout(pnlCajon3);
        pnlCajon3.setLayout(pnlCajon3Layout);
        pnlCajon3Layout.setHorizontalGroup(
            pnlCajon3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon3Layout.setVerticalGroup(
            pnlCajon3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        pnlCajon4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon4Layout = new javax.swing.GroupLayout(pnlCajon4);
        pnlCajon4.setLayout(pnlCajon4Layout);
        pnlCajon4Layout.setHorizontalGroup(
            pnlCajon4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon4Layout.setVerticalGroup(
            pnlCajon4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        pnlCajon5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon5Layout = new javax.swing.GroupLayout(pnlCajon5);
        pnlCajon5.setLayout(pnlCajon5Layout);
        pnlCajon5Layout.setHorizontalGroup(
            pnlCajon5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon5Layout.setVerticalGroup(
            pnlCajon5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        pnlCajon6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon6Layout = new javax.swing.GroupLayout(pnlCajon6);
        pnlCajon6.setLayout(pnlCajon6Layout);
        pnlCajon6Layout.setHorizontalGroup(
            pnlCajon6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon6Layout.setVerticalGroup(
            pnlCajon6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        pnlCajon7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon7Layout = new javax.swing.GroupLayout(pnlCajon7);
        pnlCajon7.setLayout(pnlCajon7Layout);
        pnlCajon7Layout.setHorizontalGroup(
            pnlCajon7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon7Layout.setVerticalGroup(
            pnlCajon7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        pnlCajon8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon8Layout = new javax.swing.GroupLayout(pnlCajon8);
        pnlCajon8.setLayout(pnlCajon8Layout);
        pnlCajon8Layout.setHorizontalGroup(
            pnlCajon8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon8Layout.setVerticalGroup(
            pnlCajon8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        pnlCajon9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon9Layout = new javax.swing.GroupLayout(pnlCajon9);
        pnlCajon9.setLayout(pnlCajon9Layout);
        pnlCajon9Layout.setHorizontalGroup(
            pnlCajon9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon9Layout.setVerticalGroup(
            pnlCajon9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        pnlCajon10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon10Layout = new javax.swing.GroupLayout(pnlCajon10);
        pnlCajon10.setLayout(pnlCajon10Layout);
        pnlCajon10Layout.setHorizontalGroup(
            pnlCajon10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon10Layout.setVerticalGroup(
            pnlCajon10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        pnlCajon11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon11Layout = new javax.swing.GroupLayout(pnlCajon11);
        pnlCajon11.setLayout(pnlCajon11Layout);
        pnlCajon11Layout.setHorizontalGroup(
            pnlCajon11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon11Layout.setVerticalGroup(
            pnlCajon11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        pnlCajon12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon12MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon12Layout = new javax.swing.GroupLayout(pnlCajon12);
        pnlCajon12.setLayout(pnlCajon12Layout);
        pnlCajon12Layout.setHorizontalGroup(
            pnlCajon12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon12Layout.setVerticalGroup(
            pnlCajon12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        pnlCajon13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon13.setPreferredSize(new java.awt.Dimension(130, 100));
        pnlCajon13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon13MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon13Layout = new javax.swing.GroupLayout(pnlCajon13);
        pnlCajon13.setLayout(pnlCajon13Layout);
        pnlCajon13Layout.setHorizontalGroup(
            pnlCajon13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );
        pnlCajon13Layout.setVerticalGroup(
            pnlCajon13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );

        pnlCajon14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon14.setPreferredSize(new java.awt.Dimension(130, 100));
        pnlCajon14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon14MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon14Layout = new javax.swing.GroupLayout(pnlCajon14);
        pnlCajon14.setLayout(pnlCajon14Layout);
        pnlCajon14Layout.setHorizontalGroup(
            pnlCajon14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );
        pnlCajon14Layout.setVerticalGroup(
            pnlCajon14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );

        pnlCajon15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon15Layout = new javax.swing.GroupLayout(pnlCajon15);
        pnlCajon15.setLayout(pnlCajon15Layout);
        pnlCajon15Layout.setHorizontalGroup(
            pnlCajon15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon15Layout.setVerticalGroup(
            pnlCajon15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        pnlCajon16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlCajon16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCajon16MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCajon16Layout = new javax.swing.GroupLayout(pnlCajon16);
        pnlCajon16.setLayout(pnlCajon16Layout);
        pnlCajon16Layout.setHorizontalGroup(
            pnlCajon16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        pnlCajon16Layout.setVerticalGroup(
            pnlCajon16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        btnLlenar.setText("Llenar espacio");
        btnLlenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLlenarActionPerformed(evt);
            }
        });

        btnMenu.setText("Ventana Principal\n");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(108, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlCajon6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlCajon9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlCajon7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlCajon10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlCajon11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlCajon12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlCajon16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(739, 739, 739)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlCajon13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlCajon14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pnlCajon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlCajon2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlCajon3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)))
                        .addComponent(pnlCajon4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlCajon8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlCajon5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlCajon15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(63, 63, 63))
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(btnLlenar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(69, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLlenar)
                    .addComponent(btnMenu))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCajon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlCajon2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlCajon3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlCajon4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlCajon8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlCajon5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlCajon15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(pnlCajon13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCajon14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCajon16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnlCajon6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pnlCajon9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pnlCajon7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pnlCajon10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pnlCajon11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pnlCajon12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27))
        );
    }// </editor-fold>//GEN-END:initComponents

//A PARTIR DE AQUÍ, LOS MÉTODOS SON SIMPLEMENTE PARA QUE CUANDO SE LE DE CLICK A CUALQUIER CAJÓN, HAGA UNA DE DOS COSAS. SI ESTÁ ROJO, MANDARÁ UN MENSAJE AL USUARIO QUE EL LUGAR YA ESTÁ OCUPADO. SI EL PANEL
    //ESTÁ VERDE, ENTONCES MANDARÁ UN MENSAJE DE CONFIRMACIÓN DE QUE ESE ES EL ESPACIO QUE QUIEREN QUE ABRA, LUEGO QUE SE COFIRMA, EL PANEL SE VUELVE AMARILLO Y EL CARRO APARACE PARA SER MOVIDO POR LAS TECLAS
    
    private void pnlCajon1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon1MouseClicked
        if (pnlCajon1.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon1.setBackground(Color.YELLOW);
                this.repaint();
            }
        } else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
        
    }//GEN-LAST:event_pnlCajon1MouseClicked

    private void pnlCajon2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon2MouseClicked
        if (pnlCajon2.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon2.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon2MouseClicked

    private void pnlCajon3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon3MouseClicked
        if (pnlCajon3.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon3.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon3MouseClicked

    private void pnlCajon4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon4MouseClicked
        if (pnlCajon4.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon4.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon4MouseClicked

    private void pnlCajon8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon8MouseClicked
        if (pnlCajon8.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon8.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon8MouseClicked

    private void pnlCajon5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon5MouseClicked
        if (pnlCajon5.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon5.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon5MouseClicked

    private void pnlCajon6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon6MouseClicked
        if (pnlCajon6.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon6.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon6MouseClicked

    private void pnlCajon9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon9MouseClicked
        if (pnlCajon9.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon9.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon9MouseClicked

    private void pnlCajon7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon7MouseClicked
        if (pnlCajon7.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon7.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon7MouseClicked

    private void pnlCajon10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon10MouseClicked
        if (pnlCajon10.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon10.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon10MouseClicked

    private void pnlCajon11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon11MouseClicked
        if (pnlCajon11.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon11.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon11MouseClicked

    private void pnlCajon12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon12MouseClicked
        if (pnlCajon12.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon12.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon12MouseClicked

    private void pnlCajon13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon13MouseClicked
        if (pnlCajon13.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon13.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon13MouseClicked

    private void pnlCajon14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon14MouseClicked
        if (pnlCajon14.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon14.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon14MouseClicked

    private void pnlCajon15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon15MouseClicked
        if (pnlCajon15.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon15.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon15MouseClicked

    private void pnlCajon16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCajon16MouseClicked
        if (pnlCajon16.getBackground()==Color.GREEN) {
            int reply = JOptionPane.showConfirmDialog(pnlCajon1, "¿Desea escoger este espacio?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION) {
                carro = new Carro();
                pnlCajon16.setBackground(Color.YELLOW);
                this.repaint();
            }
        }else {
            JOptionPane.showMessageDialog(null, "El espacio está ocupado");
        }
    }//GEN-LAST:event_pnlCajon16MouseClicked

    
    //ESTE MÉTODO ES PARA SIMULAR QUE EL CARRO HA LLEGADO AL ESPACIO AMARILLO. VERIFICA SI EL CAJÓN ES AMARILLO, Y SI ES ASÍ, LO CONVIERTE A ROJO.
    
    private void btnLlenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLlenarActionPerformed
       if(pnlCajon1.getBackground() == Color.YELLOW) {
           pnlCajon1.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon2.getBackground() == Color.YELLOW) {
           pnlCajon2.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon3.getBackground() == Color.YELLOW) {
           pnlCajon3.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon4.getBackground() == Color.YELLOW) {
           pnlCajon4.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon5.getBackground() == Color.YELLOW) {
           pnlCajon5.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon6.getBackground() == Color.YELLOW) {
           pnlCajon6.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon7.getBackground() == Color.YELLOW) {
           pnlCajon7.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon8.getBackground() == Color.YELLOW) {
           pnlCajon8.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon9.getBackground() == Color.YELLOW) {
           pnlCajon9.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon10.getBackground() == Color.YELLOW) {
           pnlCajon10.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon11.getBackground() == Color.YELLOW) {
           pnlCajon11.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon12.getBackground() == Color.YELLOW) {
           pnlCajon12.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon13.getBackground() == Color.YELLOW) {
           pnlCajon13.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon14.getBackground() == Color.YELLOW) {
           pnlCajon14.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon15.getBackground() == Color.YELLOW) {
           pnlCajon15.setBackground(Color.RED);
           this.repaint();
       }
       
       if(pnlCajon16.getBackground() == Color.YELLOW) {
           pnlCajon16.setBackground(Color.RED);
           this.repaint();
       }
    }//GEN-LAST:event_btnLlenarActionPerformed

    // ESTE MÉTODO ES PARA DEVOLVER AL USUARIO AL MENÚ INICIAL
    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        inicio g = new inicio();
        this.setVisible(false);
        g.setVisible(true);
    }//GEN-LAST:event_btnMenuActionPerformed

    //ESTE MÉTODO ES PARA PINTAR EL CARRO EN EL PANEL, ADEMÁS DE REPINTAR PERIÓDICAMENTE
    public void paint(Graphics grafica) {
        super.paint(grafica);
        Graphics2D g2 = (Graphics2D) grafica;
        if (carro!=null) {
            g2.drawImage(carro.tenerImagen(), carro.tenerX(), carro.tenerY(), null);
        }
        

    }

    //ESTE MÉTODO ES PARA MOVERLO, REPINTÁNDOLO AL LUGAR DONDE SE SUPONE DEBE ESTAR
    public void actionPerformed(ActionEvent e) {
        if (carro != null) {
            carro.mover();
            repaint();
        }
     

    }

    //ESTE MÉTODO ES PARA QUE EL CARRO RESPONDA A LAS TECLAS
    private class Teclado extends KeyAdapter {

        public void keyPressed(KeyEvent e) {
            carro.keyPressed(e);

        }

        public void keyReleased(KeyEvent e) {
            carro.keyReleased(e);

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLlenar;
    private javax.swing.JButton btnMenu;
    private javax.swing.JPanel pnlCajon1;
    private javax.swing.JPanel pnlCajon10;
    private javax.swing.JPanel pnlCajon11;
    private javax.swing.JPanel pnlCajon12;
    private javax.swing.JPanel pnlCajon13;
    private javax.swing.JPanel pnlCajon14;
    private javax.swing.JPanel pnlCajon15;
    private javax.swing.JPanel pnlCajon16;
    private javax.swing.JPanel pnlCajon2;
    private javax.swing.JPanel pnlCajon3;
    private javax.swing.JPanel pnlCajon4;
    private javax.swing.JPanel pnlCajon5;
    private javax.swing.JPanel pnlCajon6;
    private javax.swing.JPanel pnlCajon7;
    private javax.swing.JPanel pnlCajon8;
    private javax.swing.JPanel pnlCajon9;
    // End of variables declaration//GEN-END:variables
}
